apply from: "gradle/vertx.gradle"
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

repositories {
	maven {
		url "http://maven.web-education.net/nexus/content/groups/public"
	}
}

dependencies {
	compile "org.entcore:common:$entCoreVersion"
    compile "fr.wseduc:vertx-cron-timer:$vertxCronTimer"
}

javadoc {
  options.encoding = 'UTF-8'
  classpath  = configurations.provided
  classpath += configurations.compile
}

configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

def configurePom(def pom) {
	pom.project {
		description 'Stats (ent-core)'
		inceptionYear '2014'
		packaging 'zip'
		url 'http://code.web-education.net/one/stats'

		developers {
			developer {
				id 'jelb'
				name 'Julien Elbaz'
				email 'julien.elbaz@web-education.net'
			}
		}

		scm {
			url 'git@code.web-education.net:one/stats.git'
		}

		properties {
			setProperty('project.build.sourceEncoding', 'UTF8')
		}
	}
}

def generateMissingI18n() {
  JsonSlurper jsonSlurper = new JsonSlurper()
    File rootDir = new File(".")
    rootDir.eachFileRecurse {
      if (it.isDirectory() && ("i18n".equals(it.getName()) || ("timeline".equals(it.getName()) && it.getParent().endsWith("i18n")))) {
        Map i18n = [:]
          it.eachFileMatch(~/.+.json/) { file ->
            def t = file.text
              i18n.put(file.getName(), (Map) jsonSlurper.parseText((t != null && !t.empty) ? t : "{}"))
          }
        Map fr = i18n.remove("fr.json")
          new File(it, "fr.json").withWriter{ it << JsonOutput.prettyPrint(JsonOutput.toJson(fr.sort())) }
        i18n.each { key, lang ->
          Map out = fr.findAll({true})
            out.putAll(lang)
            new File(it, key).withWriter{ it << JsonOutput.prettyPrint(JsonOutput.toJson(out.sort())) }
        }
      }
    }
}

task generateI18n(description:'Generate missing keys in i18n files') << {
  generateMissingI18n()
}

